{"version":3,"sources":["components/PageLayout/PageLayout.js","actions/types.js","apis/listItems.js","actions/index.js","components/Modals/ListModal.js","components/IndividualListItem/ItemPopover.js","components/IndividualListItem/ItemDueDate.js","components/IndividualListItem/IndividualListItem.js","components/AddListItem/AddListItem.js","components/ListItems/ListItems.js","components/CompletedList/CompletedListItem.js","components/CompletedList/CompletedList.js","components/Charts/ListLineCharts.js","components/Charts/ListDoughnutChart.js","components/Charts/Charts.js","history.js","reducers/listReducer.js","reducers/index.js","App.js","index.js"],"names":["drawerWidth","sidebar","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","props","children","classes","useTheme","React","useState","open","setOpen","renderDrawerIcon","index","className","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Drawer","paper","direction","Divider","List","map","text","MenuItem","component","Link","to","disableGutters","ListItemClasses","ListItem","button","ListItemIcon","ListItemText","primary","paragraph","CREATE_LIST_ITEM","FETCH_LIST_ITEMS","DELETE_LIST_ITEM","EDIT_LIST_ITEM","axios","baseURL","fetchListItems","dispatch","a","listItems","get","response","type","payload","data","editListItem","id","formValues","patch","moment","year","month","date","currentYear","currentMonth","nextDay","connect","state","list","createListItem","getState","post","listId","edit","handleClose","Dialog","onClose","fullWidth","DialogTitle","DialogContent","utils","DateFnsUtils","initialValues","task","due","validate","values","errors","onSubmit","v","_","cloneDeep","unix","complete","submitForm","isSubmitting","autoFocus","autoComplete","multiline","TextField","name","label","disablePast","DatePicker","LinearProgress","Button","disabled","DialogActions","deleteListItem","delete","anchorEl","setAnchorEl","Boolean","undefined","event","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","currentDate","icon","margin","fontSize","typography","flexWrap","red","renderDate","format","ItemDueDate","checkedButton","green","Fade","in","timeout","role","dense","datecomplete","Checkbox","checked","tabIndex","disableRipple","checkedIcon","secondary","ListItemSecondaryAction","disabledItem","grey","AddListItem","backgroundColor","palette","background","useEffect","Grid","container","item","xs","sm","result","mapValues","listitem","push","renderList","listItem","length","options","scales","xAxes","time","unit","ticks","autoSkip","maxTicksLimit","min","subtract","max","add","prepareLabels","prepareData","datetime","y","forEach","t","isSame","orderBy","prepare","labels","datasets","fill","borderColor","legend","reverse","filter","borderWidth","createBrowserHistory","listReducer","action","mapKeys","omit","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","reduxThunk","App","createMuiTheme","ThemeProvider","CssBaseline","history","path","exact","ListItems","CompletedLIst","Charts","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.12f44cc4.chunk.js","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport EqualizerIcon from \"@material-ui/icons/Equalizer\";\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\nimport { Link } from \"react-router-dom\";\nimport { MenuItem } from \"@material-ui/core\";\n\nconst drawerWidth = 240;\n\nconst sidebar = [\n  [\"TO DO's\", \"/\"],\n  [\"Completed\", \"/completed\"],\n  [\"Statistics\", \"/stats\"],\n  [\"Feedback\", \"/feedback\"]\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\n\nexport default function MiniDrawer (props) {\n  const { children } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const renderDrawerIcon = (index) => {\n    switch (index) {\n      case 0:\n        return <ListIcon />;\n      case 1:\n        return <DoneIcon />;\n      case 2:\n        return <EqualizerIcon />;\n      case 3:\n        return <FeedbackIcon />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position='fixed'\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color='inherit'\n            aria-label='open drawer'\n            onClick={handleDrawerOpen}\n            edge='start'\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant='h6' noWrap>\n            Organise My Life\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant='permanent'\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open\n          })\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"rtl\" ? (<ChevronRightIcon />) : (<ChevronLeftIcon />)}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {sidebar.map((text, index) => (\n            <MenuItem\n              component={Link}\n              to={text[1]}\n              disableGutters\n              ListItemClasses\n              key={index}\n            >\n              <ListItem button key={text[0]}>\n                <ListItemIcon>{renderDrawerIcon(index)}</ListItemIcon>\n                <ListItemText primary={text[0]} />\n              </ListItem>\n            </MenuItem>\n          ))}\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography paragraph>{children}</Typography>\n      </main>\n    </div>\n  );\n}\n","export const CREATE_LIST_ITEM = \"CREATE_LIST_ITEM\";\nexport const FETCH_LIST_ITEMS = \"FETCH_LIST_ITEMS\";\nexport const FETCH_LIST_ITEM = \"FETCH_LIST_ITEM\";\nexport const DELETE_LIST_ITEM = \"DELETE_LIST_ITEM\";\nexport const EDIT_LIST_ITEM = \"EDIT_LIST_ITEM\";\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:3001\"\n});\n","import {\n  CREATE_LIST_ITEM,\n  FETCH_LIST_ITEMS,\n  FETCH_LIST_ITEM,  // eslint-disable-line\n  DELETE_LIST_ITEM,\n  EDIT_LIST_ITEM\n} from \"./types\";\n\nimport listItems from \"../apis/listItems\";\n\nexport const fetchListItems = () => async (dispatch) => {\n  const response = await listItems.get(\"/list\");\n\n  dispatch({ type: FETCH_LIST_ITEMS, payload: response.data });\n};\n\nexport const createListItem = (formValues) => async (dispatch, getState) => { // eslint-disable-line\n  const response = await listItems.post(\"/list\", { ...formValues });\n\n  dispatch({ type: CREATE_LIST_ITEM, payload: response.data });\n};\n\nexport const deleteListItem = (id) => async (dispatch) => {\n  await listItems.delete(`/list/${id}`);\n\n  dispatch({ type: DELETE_LIST_ITEM, payload: id });\n};\n\nexport const editListItem = (id, formValues) => async (dispatch) => {\n  const response = await listItems.patch(`/list/${id}`, formValues);\n\n  dispatch({ type: EDIT_LIST_ITEM, payload: response.data });\n};\n","import React, { useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Button, LinearProgress } from \"@material-ui/core\";\nimport { TextField } from \"formik-material-ui\";\nimport { DatePicker } from \"formik-material-ui-pickers\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport { createListItem, editListItem } from \"../../actions\";\n\nconst [currentYear, currentMonth, nextDay] = [\n  moment().year(),\n  moment().month() + 1,\n  moment().date() + 1\n];\n\nconst ListModal = (props) => {\n  const {\n    children, createListItem, editListItem, listId, edit, list\n  } = props;\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <div onClick={handleClickOpen}>{children}</div>\n      <Dialog open={open} onClose={handleClose} fullWidth>\n        <DialogTitle>{`${edit ? \"Edit\" : \"Add\"} task`}</DialogTitle>\n        <DialogContent>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Formik\n              initialValues={{\n                task: edit ? list[listId].task : \"\",\n                due: edit\n                  ? list[listId].due * 1000\n                  : `${currentYear}-${currentMonth}-${nextDay}`\n              }}\n              validate={(values) => {\n                const errors = {};\n                if (!values.task) {\n                  errors.task = \"Required\";\n                }\n                if (!values.due) {\n                  errors.due = \"Required\";\n                }\n                return errors;\n              }}\n              onSubmit={(values) => {\n                let v = {};\n                v = _.cloneDeep(values);\n                v.due = moment(values.due).unix();\n                if (edit) {\n                  editListItem(listId, v);\n                } else {\n                  v.complete = false;\n                  createListItem(v);\n                }\n\n                handleClose();\n              }}\n            >\n              {({ submitForm, isSubmitting }) => (\n                <Form>\n                  <Field\n                    autoFocus\n                    fullWidth\n                    autoComplete='off'\n                    multiline\n                    component={TextField}\n                    name='task'\n                    label='Task'\n                    type='text'\n                  />\n                  <br />\n                  <Field\n                    fullWidth\n                    disablePast\n                    component={DatePicker}\n                    label='Due date'\n                    name='due'\n                  />\n                  <br />\n\n                  {isSubmitting && <LinearProgress />}\n\n                  <br />\n                  <Button\n                    color='primary'\n                    disabled={isSubmitting}\n                    onClick={handleClose}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    color='primary'\n                    disabled={isSubmitting}\n                    onClick={submitForm}\n                  >\n                    {edit ? \"Save\" : \"Submit\"}\n                  </Button>\n                </Form>\n              )}\n            </Formik>\n          </MuiPickersUtilsProvider>\n        </DialogContent>\n        <DialogActions />\n      </Dialog>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  list: state.list\n});\n\nexport default connect(mapStateToProps, { createListItem, editListItem })(\n  ListModal\n);\n","import React, { useState } from \"react\";\nimport Popover from \"@material-ui/core/Popover\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { connect } from \"react-redux\";\nimport { deleteListItem } from \"../../actions\";\nimport ListModal from \"../Modals/ListModal\";\n\nconst ItemPopover = (props) => {\n  const { children, deleteListItem, listId } = props;\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n\n  return (\n    <>\n      <div onClick={handleClick}>{children}</div>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\"\n        }}\n      >\n        <List>\n          <ListModal edit listId={listId}>\n            <ListItem button>\n              <ListItemIcon>\n                <EditIcon />\n              </ListItemIcon>\n              <ListItemText primary='Edit task' />\n            </ListItem>\n          </ListModal>\n\n          <Divider />\n\n          <ListItem button onClick={() => deleteListItem(listId)}>\n            <ListItemIcon>\n              <DeleteIcon />\n            </ListItemIcon>\n            <ListItemText primary='Delete task' />\n          </ListItem>\n        </List>\n      </Popover>\n    </>\n  );\n};\n\nexport default connect(null, { deleteListItem })(ItemPopover);\n","import React from \"react\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport { Typography } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { red } from \"@material-ui/core/colors\";\n\nconst currentDate = moment().unix();\n\nconst useStyles = makeStyles({\n  icon: {\n    margin: \"0px 5px 0px 0px\",\n    fontSize: 15\n  },\n  typography: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    color: (props) => (props.due > currentDate ? \"\" : red[300])\n  }\n});\n\nconst renderDate = (due) => (due > currentDate\n  ? moment(due * 1000).format(\"dddd, MMMM Do\")\n  : \"Overdue!\");\n\nconst ItemDueDate = (props) => {\n  const classes = useStyles(props);\n  const { due } = props;\n  return (\n    <Typography className={classes.typography} variant='caption'>\n      <ScheduleIcon className={classes.icon} />\n      {renderDate(due)}\n    </Typography>\n  );\n};\n\nexport default ItemDueDate;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\nimport { green } from \"@material-ui/core/colors\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { connect } from \"react-redux\";\nimport { Fade } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport ItemPopover from \"./ItemPopover\";\nimport ItemDueDate from \"./ItemDueDate\";\nimport { editListItem } from \"../../actions\";\n\nconst useStyles = makeStyles(() => ({\n  checkedButton: {\n    color: green[500]\n  }\n}));\n\nconst IndividualListItem = (props) => {\n  const {\n    text, complete, listId, due, editListItem\n  } = props;\n  const classes = useStyles();\n\n  return (\n    <Fade in={!complete} timeout={1000}>\n      <ListItem role={undefined} dense>\n        <ListItemIcon\n          onClick={() => editListItem(listId, {\n            complete: !complete,\n            datecomplete: moment().unix()\n          })}\n        >\n          <Checkbox\n            edge='start'\n            checked={complete}\n            tabIndex={-1}\n            disableRipple\n            icon={<RadioButtonUncheckedIcon />}\n            checkedIcon={\n              <RadioButtonCheckedIcon className={classes.checkedButton} />\n            }\n          />\n        </ListItemIcon>\n        <ListItemText primary={text} secondary={<ItemDueDate due={due} />} />\n        <ListItemSecondaryAction>\n          <ItemPopover listId={listId}>\n            <IconButton edge='end'>\n              <MoreVertIcon />\n            </IconButton>\n          </ItemPopover>\n        </ListItemSecondaryAction>\n      </ListItem>\n    </Fade>\n  );\n};\n\nexport default connect(null, { editListItem })(IndividualListItem);\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { grey } from \"@material-ui/core/colors\";\nimport ListModal from \"../Modals/ListModal\";\n\nconst useStyles = makeStyles(() => ({\n  disabledItem: {\n    color: grey[500]\n  }\n}));\n\nconst AddListItem = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <ListModal>\n        <ListItem\n          role={undefined}\n          dense\n          button\n          className={classes.disabledItem}\n        >\n          <ListItemIcon>\n            <AddIcon />\n          </ListItemIcon>\n\n          <ListItemText primary='Add task' />\n        </ListItem>\n      </ListModal>\n    </>\n  );\n};\n\nexport default AddListItem;\n","import React, { useEffect } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { fetchListItems } from \"../../actions\";\n\nimport IndividualListItem from \"../IndividualListItem/IndividualListItem\";\nimport AddListItem from \"../AddListItem/AddListItem\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nconst ListItems = (props) => {\n  const { fetchListItems, list } = props;\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetchListItems();\n  }, []);\n\n  const renderList = () => {\n    const result = [];\n\n    _.mapValues(list, (listitem) => {\n      if (!listitem.complete) {\n        result.push(\n          <IndividualListItem\n            key={listitem.id}\n            listId={listitem.id}\n            text={listitem.task}\n            complete={listitem.complete}\n            due={listitem.due}\n          />\n        );\n      }\n    });\n\n    return result;\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={false} sm={2} />\n      <Grid item xs={12} sm={8}>\n        <List className={classes.root}>\n          {renderList()}\n          <AddListItem />\n        </List>\n      </Grid>\n      <Grid item xs={false} sm={2} />\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  list: state.list\n});\n\nexport default connect(mapStateToProps, { fetchListItems })(ListItems);\n","import React from \"react\";\nimport {\n  ListItem,\n  ListItemIcon,\n  Checkbox,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton\n} from \"@material-ui/core\";\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport { editListItem } from \"../../actions\";\nimport ItemPopover from \"../IndividualListItem/ItemPopover\";\n\nconst useStyles = makeStyles(() => ({\n  checkedButton: {\n    color: green[500]\n  },\n  listItem: {\n    background: green[100]\n  }\n}));\n\nconst CompletedListItem = (props) => {\n  const {\n    editListItem, listId, text, complete\n  } = props;\n  const classes = useStyles();\n\n  return (\n    <ListItem role={undefined} dense className={classes.listItem}>\n      <ListItemIcon\n        onClick={() => editListItem(listId, { complete: !complete })}\n      >\n        <Checkbox\n          edge='start'\n          checked={complete}\n          tabIndex={-1}\n          disableRipple\n          icon={<RadioButtonUncheckedIcon />}\n          checkedIcon={\n            <RadioButtonCheckedIcon className={classes.checkedButton} />\n          }\n        />\n      </ListItemIcon>\n      <ListItemText primary={text} />\n      <ListItemSecondaryAction>\n        <ItemPopover listId={listId}>\n          <IconButton edge='end'>\n            <MoreVertIcon />\n          </IconButton>\n        </ItemPopover>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default connect(null, { editListItem })(CompletedListItem);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  List, Grid, ListItem, ListItemText\n} from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CompletedListItem from \"./CompletedListItem\";\nimport { fetchListItems } from \"../../actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nconst CompletedLIst = (props) => {\n  const { list, fetchListItems } = props;\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetchListItems();\n  }, []);\n\n  const renderList = () => {\n    const result = [];\n\n    _.mapValues(list, (listitem) => {\n      if (listitem.complete) {\n        result.push(\n          <CompletedListItem\n            key={listitem.id}\n            listId={listitem.id}\n            text={listitem.task}\n            complete={listitem.complete}\n          />\n        );\n      }\n    });\n\n    if (result.length) {\n      return result;\n    }\n    return (\n      <ListItem>\n        <ListItemText primary='You aint done shit' />\n      </ListItem>\n    );\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={false} sm={2} />\n      <Grid item xs={12} sm={8}>\n        <List className={classes.root}>{renderList()}</List>\n      </Grid>\n      <Grid item xs={false} sm={2} />\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  list: state.list\n});\n\nexport default connect(mapStateToProps, { fetchListItems })(CompletedLIst);\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\n\nconst options = {\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          unit: \"day\"\n        },\n        ticks: {\n          autoSkip: true,\n          maxTicksLimit: 20,\n          min: moment().subtract(7, \"days\"),\n          max: moment().add(1, \"days\")\n        }\n      }\n    ]\n  }\n};\n\nconst ListLineCharts = (props) => {\n  const { list } = props;\n\n  const prepare = () => {\n    const prepareLabels = [];\n    let prepareData = [];\n\n    _.mapValues(list, (listitem) => {\n      if (listitem.complete) {\n        const datetime = listitem.datecomplete * 1000;\n        let y = 1;\n        prepareLabels.push(moment(datetime).format(\"dddd, MMMM Do\"));\n        if (prepareData.length) {\n          prepareData.forEach((data, index) => {\n            if (data.t.isSame(datetime, \"day\")) {\n              y += 1;\n              prepareData[index].y += 1;\n            }\n          });\n        }\n\n        if (y === 1) {\n          prepareData.push({ t: moment(datetime), y });\n        }\n      }\n    });\n\n    prepareData = _.orderBy(prepareData, [\"t._i\"], [\"asc\"]);\n\n    return { prepareLabels, prepareData };\n  };\n  const { prepareLabels, prepareData } = prepare();\n\n  const data = {\n    labels: prepareLabels,\n    datasets: [\n      {\n        label: \"Completed Tasks\",\n        data: prepareData,\n        fill: false,\n        backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgba(255, 99, 132, 0.2)\"\n      }\n    ]\n  };\n  return <Line data={data} options={options} />;\n};\n\nconst mapStateToProps = (state) => ({\n  list: state.list\n});\n\nexport default connect(mapStateToProps, {})(ListLineCharts);\n","import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n\nconst options = {\n  legend: {\n    reverse: true\n  }\n};\n\nconst ListDoughnutChart = (props) => {\n  const { list } = props;\n\n  const data = {\n    labels: [\"Done!\", \"Not Done\"],\n    datasets: [\n      {\n        label: \"# of Votes\",\n        data: [\n          _.filter(list, (listitem) => {\n            if (listitem.complete) return listitem;\n            return null;\n          }).length,\n          _.filter(list, (listitem) => {\n            if (!listitem.complete) return listitem;\n            return null;\n          }).length\n        ],\n        backgroundColor: [\"rgba(75, 192, 192, 0.2)\", \"rgba(255, 99, 132, 0.2)\"],\n        borderColor: [\"rgba(75, 192, 192, 1)\", \"rgba(255, 99, 132, 1)\"],\n        borderWidth: 1\n      }\n    ]\n  };\n\n  return <Doughnut data={data} options={options} />;\n};\n\nconst mapStateToProps = (state) => ({\n  list: state.list\n});\n\nexport default connect(mapStateToProps, {})(ListDoughnutChart);\n","import React, { useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport ListLineCharts from \"./ListLineCharts\";\nimport ListDoughnutChart from \"./ListDoughnutChart\";\nimport { fetchListItems } from \"../../actions\";\n\nconst Charts = (props) => {\n  const { fetchListItems } = props;\n\n  useEffect(() => {\n    fetchListItems();\n  }, []);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={false} sm={2} />\n      <Grid item xs={12} sm={8}>\n        <ListLineCharts />\n        <br />\n        <ListDoughnutChart />\n      </Grid>\n      <Grid item xs={false} sm={2} />\n    </Grid>\n  );\n};\n\nexport default connect(null, { fetchListItems })(Charts);\n","import { createBrowserHistory } from \"history\";\n// installed automatically with react-router-dom\n\nexport default createBrowserHistory({});\n","import _ from \"lodash\";\nimport {\n  CREATE_LIST_ITEM,\n  FETCH_LIST_ITEMS,\n  FETCH_LIST_ITEM, // eslint-disable-line \n  DELETE_LIST_ITEM,\n  EDIT_LIST_ITEM\n} from \"../actions/types\";\n\nconst listReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_LIST_ITEMS:\n      return { ...state, ..._.mapKeys(action.payload, \"id\") };\n    case CREATE_LIST_ITEM:\n      return { ...state, [action.payload.id]: action.payload };\n    case DELETE_LIST_ITEM:\n      return _.omit(state, action.payload);\n    case EDIT_LIST_ITEM:\n      return { ...state, [action.payload.id]: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default listReducer;\n","import { combineReducers } from \"redux\";\n\nimport listReducer from \"./listReducer\";\n\nconst reducers = combineReducers({\n  list: listReducer\n});\n\nexport default reducers;\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport PageLayout from \"./components/PageLayout/PageLayout\";\nimport ListItems from \"./components/ListItems/ListItems\";\nimport CompletedLIst from \"./components/CompletedList/CompletedList\";\nimport Charts from \"./components/Charts/Charts\";\nimport history from \"./history\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reduxThunk from \"redux-thunk\";\n\nconst store = createStore(\n  reducers,\n  undefined,\n  composeWithDevTools(applyMiddleware(reduxThunk))\n);\n\nconst App = () => {\n  const theme = createMuiTheme({});\n  return (\n\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Router history={history}>\n          <PageLayout>\n            <Switch>\n              <Route path='/' exact component={ListItems} />\n              <Route path='/completed' exact component={CompletedLIst} />\n              <Route path='/stats' exact component={Charts} />\n              <Route path='/feedback' exact component='' />\n            </Switch>\n          </PageLayout>\n        </Router>\n      </ThemeProvider>\n    </Provider>\n\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}